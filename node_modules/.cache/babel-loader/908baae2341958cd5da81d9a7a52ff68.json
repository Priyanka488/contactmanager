{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\contactmanager\\\\src\\\\components\\\\Contacts.js\";\nimport React, { Component } from 'react';\nimport Contact from './Contact';\n\nclass Contacts extends Component {\n  //if you are using constructor only for initialising state, you need not a constructor, you can simply write state ={} inside a class directly without a constructor\n  constructor() {\n    super();\n    this.state = {\n      contacts: [{\n        id: 1,\n        name: 'Priyanka',\n        email: 'pika@gmail.com',\n        phone: '9450465058'\n      }, {\n        id: 2,\n        name: 'Ashmeet',\n        email: 'ash@gmail.com',\n        phone: '2222222222'\n      }, {\n        id: 3,\n        name: 'harsh',\n        email: 'harsh@gmail.com',\n        phone: '5555555555'\n      }]\n    };\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.heading), contacts.map(contact => React.createElement(Contact, {\n      key: contact.id,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\contactmanager\\src\\components\\Contacts.js"],"names":["React","Component","Contact","Contacts","constructor","state","contacts","id","name","email","phone","render","props","heading","map","contact"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAE5B;AACAG,EAAAA,WAAW,GACX;AACI;AACF,SAAKC,KAAL,GACE;AAEJC,MAAAA,QAAQ,EAAC,CACL;AACIC,QAAAA,EAAE,EAAC,CADP;AAEIC,QAAAA,IAAI,EAAC,UAFT;AAGIC,QAAAA,KAAK,EAAC,gBAHV;AAIIC,QAAAA,KAAK,EAAC;AAJV,OADK,EAOL;AACIH,QAAAA,EAAE,EAAC,CADP;AAEIC,QAAAA,IAAI,EAAC,SAFT;AAGIC,QAAAA,KAAK,EAAC,eAHV;AAIIC,QAAAA,KAAK,EAAC;AAJV,OAPK,EAaL;AACIH,QAAAA,EAAE,EAAC,CADP;AAEIC,QAAAA,IAAI,EAAC,OAFT;AAGIC,QAAAA,KAAK,EAAC,iBAHV;AAIIC,QAAAA,KAAK,EAAC;AAJV,OAbK;AAFL,KADF;AAyBD;;AAEDC,EAAAA,MAAM,GACN;AAAA,UACWL,QADX,GACqB,KAAKD,KAD1B,CACWC,QADX;AAEI,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKM,KAAL,CAAWC,OAAhB,CADA,EAECP,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAAG,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACR,EAAtB;AAA0B,MAAA,OAAO,EAAEQ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,CAFD,CAAP;AASH;;AA7C2B;;AAgDhC,eAAeZ,QAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport Contact from './Contact';\r\nclass Contacts extends Component{\r\n    \r\n    //if you are using constructor only for initialising state, you need not a constructor, you can simply write state ={} inside a class directly without a constructor\r\n    constructor()\r\n    {\r\n        super();\r\n      this.state=\r\n        {\r\n        \r\n    contacts:[\r\n        {\r\n            id:1,\r\n            name:'Priyanka',\r\n            email:'pika@gmail.com',\r\n            phone:'9450465058'\r\n        },\r\n        {\r\n            id:2,\r\n            name:'Ashmeet',\r\n            email:'ash@gmail.com',\r\n            phone:'2222222222'\r\n        },\r\n        {\r\n            id:3,\r\n            name:'harsh',\r\n            email:'harsh@gmail.com',\r\n            phone:'5555555555'\r\n        },     \r\n    ]\r\n    };\r\n      \r\n    }\r\n    \r\n    render()\r\n    {\r\n        const {contacts}=this.state;\r\n        return(<React.Fragment>\r\n               <h3>{this.props.heading}</h3>\r\n               {contacts.map(contact=>(<Contact key={contact.id} contact={contact}\r\n               />\r\n              )\r\n        )\r\n    }\r\n    </React.Fragment>\r\n              );\r\n    }\r\n}\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}