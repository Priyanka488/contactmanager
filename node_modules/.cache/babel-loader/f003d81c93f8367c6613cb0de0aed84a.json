{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\contactmanager\\\\src\\\\components\\\\Contacts\\\\Contacts.js\";\n//if you are using constructor only for initialising state, you need not a constructor, you can simply write state ={} inside a class directly without a constructor\nimport React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return React.createElement(Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, value => {\n      const contacts = value.contacts;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Contact \"), \" List\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.heading), contacts.map(contact => React.createElement(Contact, {\n        key: contact.id,\n        contact: contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })));\n    });\n  }\n\n}\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\contactmanager\\src\\components\\Contacts\\Contacts.js"],"names":["React","Component","Contact","Consumer","Contacts","render","value","contacts","props","heading","map","contact","id"],"mappings":";AAAC;AAED,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAK5BI,EAAAA,MAAM,GACN;AACI,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,KAAK,IACN;AAAA,YACOC,QADP,GACmBD,KADnB,CACOC,QADP;AAEA,aACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA/B,UADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,OAAhB,CAFA,EAGCF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAG,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,QAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,CAHD,CADA;AAWC,KAfD,CADJ;AAqBP;;AA5B+B;;AA8BhC,eAAeP,QAAf","sourcesContent":[" //if you are using constructor only for initialising state, you need not a constructor, you can simply write state ={} inside a class directly without a constructor\r\n\r\nimport React,{Component} from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component{\r\n    \r\n   \r\n  \r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <Consumer>\r\n            {value=>\r\n            {\r\n            const {contacts} = value;\r\n            return(\r\n            <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\"><span class=\"text-danger\">Contact </span> List</h1>\r\n            <h3>{this.props.heading}</h3>\r\n            {contacts.map(contact=>(<Contact key={contact.id} contact={contact}\r\n            />\r\n            )\r\n            )\r\n            }\r\n            </React.Fragment>\r\n            )\r\n            }}\r\n            </Consumer>\r\n        \r\n        );\r\n        \r\n}}\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}