{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\contactmanager\\\\src\\\\components\\\\layout\\\\TextInputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  name,\n  value,\n  placeholder,\n  label,\n  type,\n  onChange,\n  error\n}) => {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    type: type,\n    name: name,\n    className: classnames(\"form-control form-control-lg\", {\n      \"is-invalid\": error\n    }),\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, error));\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\contactmanager\\src\\components\\layout\\TextInputGroup.js"],"names":["React","PropTypes","classnames","TextInputGroup","name","value","placeholder","label","type","onChange","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,KAAN;AAAYC,EAAAA,WAAZ;AAAwBC,EAAAA,KAAxB;AAA8BC,EAAAA,IAA9B;AAAmCC,EAAAA,QAAnC;AAA4CC,EAAAA;AAA5C,CAAD,KACrB;AACI,SAEQ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEN,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBG,KAAvB,CADJ,EAEI;AACA,IAAA,IAAI,EAAEC,IADN;AAEA,IAAA,IAAI,EAAEJ,IAFN;AAGA,IAAA,SAAS,EAAEF,UAAU,CAAC,8BAAD,EACpB;AAAC,oBAAaQ;AAAd,KADoB,CAHrB;AAKA,IAAA,WAAW,EAAEJ,WALb;AAMA,IAAA,KAAK,EAAED,KANP;AAOA,IAAA,QAAQ,EAAEI,QAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAYSC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACbA,KADa,CAZlB,CAFR;AAmBH,CArBD;;AAuBAP,cAAc,CAACQ,SAAf,GAAyB;AACjBP,EAAAA,IAAI,EAACH,SAAS,CAACW,MAAV,CAAiBC,UADL;AAEjBN,EAAAA,KAAK,EAACN,SAAS,CAACW,MAAV,CAAiBC,UAFN;AAGjBP,EAAAA,WAAW,EAACL,SAAS,CAACW,MAAV,CAAiBC,UAHZ;AAIjBR,EAAAA,KAAK,EAACJ,SAAS,CAACW,MAAV,CAAiBC,UAJN;AAKjBL,EAAAA,IAAI,EAACP,SAAS,CAACW,MAAV,CAAiBC,UALL;AAMjBJ,EAAAA,QAAQ,EAACR,SAAS,CAACa,IAAV,CAAeD,UANP;AAOjBH,EAAAA,KAAK,EAACT,SAAS,CAACW,MAAV,CAAiBC;AAPN,CAAzB;AAUAV,cAAc,CAACY,YAAf,GACA;AACIP,EAAAA,IAAI,EAAC;AADT,CADA;AAKA,eAAeL,cAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup=({name,value,placeholder,label,type,onChange,error})=>\r\n{\r\n    return(\r\n    \r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames(\"form-control form-control-lg\",\r\n                 {\"is-invalid\":error})}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n                \r\n                    {error && <div className='invalid-feedback'> \r\n                {error}</div>\r\n                    }\r\n                </div>\r\n            );\r\n};\r\n \r\nTextInputGroup.propTypes={\r\n        name:PropTypes.string.isRequired,\r\n        label:PropTypes.string.isRequired,\r\n        placeholder:PropTypes.string.isRequired,\r\n        value:PropTypes.string.isRequired,\r\n        type:PropTypes.string.isRequired,\r\n        onChange:PropTypes.func.isRequired,\r\n        error:PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps=\r\n{\r\n    type:'text',\r\n}\r\n\r\nexport default TextInputGroup;"]},"metadata":{},"sourceType":"module"}